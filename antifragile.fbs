namespace fbs.pilot;

enum Command: byte {
    welcome,
    ping,
    bubble_get,
    bubble_status,
    player_get,
    player_status,
    game_ready,
    game_start,
    game_finish,
    joycon,
    shoot,
    reload
}

enum BubbleType: byte {
    normal,
    event
}

struct Vec2 {
    x: float;
    y: float;
}

table Bubble {
    uid: int;
    pos_cur: Vec2;
    pos_target: Vec2;
    speed: float;
    type: BubbleType;
}

table Bubbles {
    bubbles: [Bubble];
}

enum PlayerStatus: byte {
    idle,
    ready,
    game
}

table Player {
    uid: int;
    username: string;
    image_url: string;
    score: int;
    status: PlayerStatus;
}

table Players {
    players: [Player];
}

table Joycon {
    right_y: int;
    right_x: int;
    right_a: int;
    right_b: int;
    right_r: int;
    right_zr: int;
    right_horizontal: int;
    right_vertical: int;
    right_accel_x: int;
    right_accel_y: int;
    right_accel_z: int;
    right_gyro_x: float;
    right_gyro_y: float;
    right_gyro_z: float;
    right_battery_charging: int;
    right_battery_level: int;
    right_home: int;
    left_down: int;
    left_up: int;
    left_right: int;
    left_left: int;
    left_l: int;
    left_zl: int;
    left_horizontal: int;
    left_vertical: int;
    left_accel_x: int;
    left_accel_y: int;
    left_accel_z: int;
    left_gyro_x: float;
    left_gyro_y: float;
    left_gyro_z: float;
    left_battery_charging: int;
    left_battery_level: int;
}

union Data { Bubble, Bubbles, Player, Players, Joycon }

enum Sender: byte {
    server,
    client
}

table Request {
    timestamp: long;
    command: Command;
    sender: Sender;
    data: Data;
}

table Response {
    timestamp: long;
    command: Command;
    error_code: int;
    data: Data;
}
